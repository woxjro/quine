use  include_str  as  is;  use  print as p; use println as pln; use vec as v; fn main() { let spc = "\u{20}"; let s = is!("main.rs"); let ns = s.replace("\n", spc); let mut v: Vec<_> = ns  .split(spc)
.map(|e|  e.trim()) .filter(|e| e.len() > 0) .collect(); let x = false; let o = true; let t = 33; let u = 15; let _ = [ (v![(x, 100),], 6), (v![(x, t), (o, 7), (x, 60)], 1), (v![(x, 31), (o, 13),  (x,
56)], 1), (v![(x, 31), (o, 4), (x, 3), (o, 8), (x, 54)], 1), (v![(x, 37), (o, 3), (x, 3), (o, 4), (x, 53)], 1), (v![(x, 34), (o, 4), (x, 1), (o, 4), (x, 57)], 1), (v![(x, 34), (o, 4), (x, 1), (o,  4),
(x, 57)], 1), (v![(x, 34), (o, 4), (x, 1), (o, 4), (x, 57)], 1), ( v![(x, 34), (o, 2), (x, 5), (o, 3), (x, 22), (o, 9), (x, 25)], 1, ), ( v![ (x, t), (o, 3), (x, 6), (o, 2), (x, 20), (o, 14), (x,  5),
(o, 2), (x, u), ], 1, ), ( v![ (x, t), (o, 3), (x, 6), (o, 2), (x, 20), (o, 14), (x, 5), (o, 2), (x, u), ], 1, ), ( v![ (x, t), (o, 2), (x, 3), (o, 2), (x, 3), (o, 2), (x, 19), (o, 3), (x, 7), (o, 5),
(x,  4), (o, 2), (x, u), ], 1, ), ( v![ (x, t), (o, 2), (x, 3), (o, 2), (x, 3), (o, 2), (x, 19), (o, 2), (x, 4), (o, 5), (x, 2), (o, 3), (x, 2), (o, 3), (x, u), ], 1, ), ( v![ (x, t), (o, 3), (x,  7),
(o,  2), (x, 23), (o, 8), (x, 2), (o, 2), (x, 2), (o, 3), (x,  u),              ], 1, ), ( v![ (x, 34), (o, 2), (x, 6), (o, 2), (x, 24), (o, 3), (x, 3), (o, 3), (x, 1), (o, 2), (x, 2), (o, 3), (x, u),
],  1, ), ( v![ (x, 34), (o, 3), (x, 4), (o, 3), (x, 24),  (o,                          2),  (x,  1), (o, 2), (x, 2), (o, 2), (x, 1), (o, 3), (x, 1), (o, 3), (x, u), ], 1, ), ( vec![ (x, 29), (o,  2),
(x,  4), (o, 4), (x, 1), (o, 3), (x, 25), (o, 2), (x, 1),  (o,                              2),  (x,  2), (o, 2), (x, 1), (o, 3), (x, 1), (o, 3), (x, u), ], 1, ), ( vec![ (x, 29), (o, 2), (x, 5),  (o,
6), (x, 13), (o, 2), (x, 11), (o, 2), (x, 5), (o, 2), (x, 1), (o, 3),  (x,                    1),  (o, 3), (x, u), ], 1, ), ( v![ (x, 29), (o, 6), (x, 20), (o, 2), (x, 5), (o, 2), (x, 4), (o, 2),  (x,
5), (o, 2), (x, 2), (o, 2), (x, 2), (o, 2), (x, u), ], 1, ), ( v![ (x,                        31),  (o, 9), (x, u), (o, 2), (x, 5), (o, 2), (x, 5), (o, 3), (x, 1), (o, 4), (x, 1), (o, 3), (x, 2),  (o,
2), (x, u), ], 1, ), ( v![ (x, t), (o, 13), (x, 9), (o, 2), (x,  5),                  (o,  3),  (x, 4), (o, 7), (x, 3), (o, 2), (x, 2), (o, 2), (x, u), ], 1, ), ( v![ (x, 39), (o, 7), (x, 9), (o,  2),
(x,  6), (o, 4), (x, 4), (o, 3), (x, 9), (o, 2), (x, u), ], 1, ),  (    v![    (x,      55), (o, 2), (x, 7), (o, 6), (x, 8), (o, 2),                  (x, 3), (o, 2), (x, u), ], 1, ), ( v![(x, 66), (o,
9),  (x,  2), (o, 3), (x, 3), (o, 2), (x, u)], 1, ), (v![(x,  69),      (o, 10), (x,    4),  (o, 3), (x, 14)], 1), (v![(x,  73),                            (o,    5),    (x, 5), (o, 3), (x, 14)],  1),
(v![(x,  51), (o, 2), (x, 31), (o, 2), (x, 14)], 1), ( v![(x,  8),                        (o, 2), (x, 41), (o, 2), (x, 31),  (o,      2), (x,  14)],          1, ),  (    v![(x,  8),  (o, 2), (x,  42),
(o,  1), (x, 31), (o, 2), (x, 14)], 1, ), (v![(x, 8), (o, 2),  (x,                        74), (o, 2), (x, 14)], 2), (v![(x, 8),    (o,  3),                              (x, 73), (o, 2), (x, 14)], 1),
( v![(x, 9), (o, 2), (x, t), (o, 6), (x, 34), (o, 2), (x, 14)], 1,      ),  (   v![(x,    9), (o, 2), (x, 27), (o, 25), (x, 21), (o, 2),                                  (x,  14)], 1, ), ( v![(x,  9),
(o, 2), (x, 27), (o, 28), (x, 18), (o, 2), (x, 14)], 1, ), (  v![(x,    9), (o,  2),    (x,  51), (o, 6), (x, 16), (o, 3), (x, 13)],  1,      ),   (                      v![  (x, 9), (o, 3), (x,  21),
(o,  2),  (x, 30), (o, 5), (x, 14), (o, 3), (x, 13), ], 1, ), (  v![      (x, 10),      (o,  2),  (x,  20), (o, 3), (x, t), (o, 3),  (x,                                  13), (o, 3), (x, 13), ], 1, ),
(  v![ (x, 10), (o, 2), (x, 19), (o, 3), (x, 35), (o,  3),    (x, 12),                (o,  3), (x, 13), ], 1, ), ( v![ (x, 10), (o,  2),                                  (x, 18), (o, 3), (x, 37),  (o,
3), (x, 11), (o, 2), (x, 14), ], 1, ), ( v![ (x, 11),  (o,    2),    (x,            17), (o, 2), (x, 39),  (o,    3),  (x, 10), (o,  2),    (x,   14),                    ],  1,  ), ( v![ (x, 11),  (o,
2), (x, 16), (o, 3), (x, 40), (o, 2), (x, 10), (o, 2), (x,            14), ], 1, ), ( v![ (x, 11), (o, 3), (x,    u),    (o,    2),  (x,    41),   (o,                    3),  (x, 8), (o, 3), (x,  14),
], 1, ), ( v![ (x, 12), (o, 2), (x, 14), (o, 2), (x, 43),  (o,                  2), (x, 8), (o, 2), (x, u), ],    1,  ),   (    v![    (x,                                12), (o, 2), (x, 13), (o,  3),
(x,  43), (o, 3), (x, 7), (o, 2), (x, u), ], 1, ), ( v![ (x,  12),                          (o,  2), (x,  13),    (o,    2),      (x, 45),                                (o,  2),  (x, 6), (o, 3),  (x,
u), ], 1, ), ( v![ (x, 12), (o, 3), (x, 11), (o, 3), (x, 45), (o, 2), (x,  6),              (o,  2), (x,  16),    ],  1, ),  (        v![  (x,      13),  (o, 2),  (x,    11), (o, 2), (x, 46), (o,  2),
(x, 5), (o, 3), (x, 16), ], 1, ), ( v![ (x, 13), (o, 2), (x, 11), (o, 2), (x, 46), (o, 3), (x, 4), (o, 2), (x,    17), ], 1,  ),            (  v![ (x,  13),              (o,  3),  (x, 9), (o, 3),  (x,
46),  (o, 3), (x, 4), (o, 2), (x, 17), ], 1, ), ( v![ (x, 14), (o, 2), (x, 9), (o, 2), (x, 47), (o, 2), (x, 4), (o, 3), (x, 17),  ],                            1,  ),    ( v![ (x, 14), (o, 3), (x, 8),
(o, 2), (x, 47), (o, 2), (x, 4), (o, 2), (x, 18), ], 1, ), ( v![ (x, u), (o, 2), (x, 8), (o, 2), (x, 47), (o, 2), (x, 3), (o, 3), (x, 18),                    ], 1, ),      (  v![  (x, u), (o, 3),  (x,
6), (o, 3), (x, 47), (o, 2), (x, 3), (o, 2), (x, 19), ], 1, ), ( v![ (x, 16), (o, 2), (x, 6), (o, 3), (x, 46), (o, 2), (x, 3), (o, 3), (x, 19), ],          1,  ),   (      v![ (x, 16), (o, 3), (x, 5),
(o, 3), (x, 46), (o, 2), (x, 2), (o, 3), (x, 20), ], 1, ), ( v![ (x, 17), (o, 3), (x, 4), (o, 3),  (x,    45), (o, 2), (x, 3), (o, 2), (x, 21), ], 1, ), ( v![ (x,  18),    (o, 2), (x, 4), (o, 3),  (x,
44), (o, 3), (x,    2), (o, 3), (x, 21), ], 1, ), ( v![ (x, 18), (o, 3), (x, 3), (o, 3), (x, 44),  (o,    2),  (x, 2), (o, 3), (x, 22), ], 1, ), ( v![ (x, 19), (o,  2),    (x, 4), (o, 2), (x, 43), (o,
2), (x, 3),  (o,    2),  (x,  23), ], 1, ), ( v![ (x, 19), (o, 3), (x, 3), (o, 2), (x, 42), (o, 3),  (x,  2),  (o, 3), (x, 23), ], 1, ), ( v![ (x, 20), (o, 3), (x,  2),    (o, 2), (x, 41), (o, 3), (x,
3), (o, 2),  (x,    24),  ], 1, ), ( v![ (x, 21), (o, 3), (x, 1), (o, 2), (x, 40), (o, 3), (x, 3), (o, 3), (x, 24), ], 1, ), ( v![ (x, 22), (o, 2), (x, 2), (o, 3),  (x,    38), (o, 2), (x, 4), (o, 2),
(x,  25), ],  1,    ), ( v![ (x, 22), (o, 3), (x, 2), (o, 4), (x, 35), (o, 3), (x, 3), (o, 3), (x, 25), ], 1, ), ( v![ (x, 23), (o, 4), (x, 1), (o, 8), (x, 31), (o, 1),    (x, 4), (o, 2), (x, 26),  ],
1,  ), (  v![(x,      25),  (o, 4), (x, 1), (o, 10), (x, 31), (o, 3), (x, 26)], 1, ), ( v![ (x, 26), (o, 6), (x, 2), (o, 11), (x, 17), (o, 2), (x, 6), (o, 3), (x,  27),    ],  1, ), ( v![(x, 28),  (o,
6),  (x,  5),  (o,    25), (x, 5), (o, 3), (x, 28)], 1, ), ( v![(x, 31), (o, 6), (x, 7),            (o,  19),  (x, 6), (o, 2), (x, 29)], 1, ), ( v![(x, t), (o, 7),  (x,    u), (o, 6), (x, 7), (o,  3),
(x,  29)],  1,  ),    (v![(x,  36),  (o, 7), (x, 24), (o, 3), (x, 30)],  1),                                                  (v![(x, 39), (o, 7), (x, 20), (o, 3),  (x,    31)],  1), (v![(x, 42),  (o,
7),  (x, 16),  (o,    3),  (x,  32)], 1), (v![(x, 45), (o, 10), (x, 8),  (o,                                                        4),  (x,  t)], 1), (v![(x, 48),  (o,    17),  (x, 35)], 1),  (v![(x,
53), (o, 10),  (x,    37)],  1), (v![(x, 100)], 2), ]; let woxjro = [ (v![(x, 100),], 6), (v![(x, t), (o, 7), (x, 60)],  1),            (v![(x, 31), (o, 13), (x,  56)],      1),  (v![(x, 31), (o,  4),
(x,  3),  (o,  8),      (x, 54)], 1), (v![(x, 37), (o, 3), (x, 3),    (o,  4), (x, 53)], 1), (v![(x, 35), (o, 7), (x, 3), (o,  2),          (x,  53)], 1), (v![(x,  34),      (o,  4),  (x, 1), (o,  4),
(x,  57)],  1),    (    v![(x, 34), (o, 2), (x, 5), (o, 3),  (x,      22), (o, 9), (x, 25)], 1, ), ( v![ (x, t), (o, 3), (x, 6), (o, 2),      (x, 20), (o, 14), (x,  5),      (o, 2), (x, u), ], 1, ), (
v![ (x, t), (o,  2),    (x,  3),  (o, 2), (x, 3), (o, 2),  (x,      19),  (o,  3), (x, 7), (o, 5), (x, 4), (o, 2), (x, u), ], 1, ), (  v![      (x, t), (o, 2), (x,  3),      (o,  2),  (x, 3), (o,  2),
(x, 19), (o, 2), (x,    4), (o, 5), (x, 2), (o, 3), (x,  2),      (o,  3),  (x, u), ], 1, ), ( v![ (x, t), (o, 3), (x, 7), (o, 2), (x,  23),      (o,  8),  (x, 2),  (o,    2), (x, 2), (o, 3), (x,  u),
],  1,  ),  ( v![  (x,    34),  (o, 2), (x, 6), (o, 2),  (x,    24), (o, 3), (x, 3), (o, 3), (x, 1), (o, 2), (x, 2), (o, 3), (x, u), ], 1,  ),      (  v![ (x, 34),  (o,    3), (x, 4), (o, 3), (x, 24),
(o,  2),  (x, 1),  (o,    2), (x, 2), (o, 2), (x, 1),  (o,      3),  (x,  1), (o, 3), (x, u), ], 1, ), ( vec![ (x, 29), (o, 2), (x, 4), (o,  4),    (x, 1), (o, 3),  (x,    25), (o, 2), (x, 1), (o, 2),
(x,  2),  (o, 2),  (x,      1),  (o,  3), (x, 1), (o,  3),    (x,  u),  ],  1, ), ( vec![ (x, 29), (o, 2), (x, 5), (o, 6), (x, 13), (o, 2),  (x,      11), (o, 2), (x,      5), (o, 2), (x, 1), (o,  3),
(x, 1), (o, 3), (x,  u),    ], 1, ), ( v![ (x, 29),  (o,    6),  (x, 20), (o, 2), (x, 5), (o, 2), (x, 4), (o, 2), (x, 5), (o, 2), (x, 2), (o,  2),    (x, 2), (o,  2),    (x,  u),  ],  1, ), ( v![  (x,
31), (o, 9), (x, u), (o,    2),  (x,  5), (o, 2),  (x,      5), (o, 3), (x, 1), (o, 4), (x, 1), (o, 3), (x, 2), (o, 2), (x, u), ], 1, ), ( v![ (x,      t),  (o,  13),    (x,  9),  (o, 2), (x, 5),  (o,
3), (x, 4), (o, 7),  (x,    3),  (o,  2), (x, 2),  (o,    2),  (x,  u), ], 1, ), ( v![ (x, 39), (o, 7), (x, 9), (o, 2), (x, 6), (o, 4), (x, 4),  (o,    3), (x,  9),      (o, 2), (x, u), ], 1, ), ( v![
(x, 55), (o, 2), (x, 7),      (o,  6),  (x, 8),  (o,      2), (x, 3), (o, 2), (x, u), ], 1, ), ( v![(x, 66), (o, 9), (x, 2), (o, 3), (x, 3), (o, 2),    (x, u)],  1,    ), (v![(x, 69), (o, 10), (x, 4),
(o,  3),  (x,  14)],   1),    (v![(x,  73), (o,  5),    (x,  5), (o, 3), (x, 14)], 1), (v![(x, 51), (o, 2), (x, 31), (o, 2), (x, 14)], 1), (  v![(x,    8),    (o,      2),  (x,  41), (o, 2), (x,  31),
(o, 2), (x, 14)], 1, ),  (    v![(x, 8), (o, 2), (x,    42), (o, 1), (x, 31), (o, 2), (x, 14)], 1, ), (v![(x, 8), (o, 2), (x, 74), (o, 2), (x, 14)],                  2),  (v![(x, 8), (o, 3), (x,  73),
(o,  2),  (x, 14)], 1),  (      v![(x, 9), (o, 2),      (x, t), (o, 6), (x, 34), (o, 2), (x, 14)], 1, ), ( v![(x, 9), (o, 2), (x, 27), (o, 25),  (x,      21), (o,    2),  (x, 14)], 1, ), ( v![(x,  9),
(o,  2),  (x, 27), (o,  28),    (x,  18), (o,  2),    (x,  14)], 1, ), ( v![(x, 9), (o, 2), (x, 51), (o, 6), (x, 16), (o, 3), (x, 13)], 1, ), (  v![    (x,  9),      (o, 3), (x, 21), (o, 2), (x,  30),
(o, 5), (x, 14), (o, 3), (x,      13), ], 1, ),  (    v![ (x, 10), (o, 2), (x, 20), (o, 3), (x, t), (o, 3), (x, 13), (o, 3), (x, 13), ], 1, ), ( v![    (x, 10),    (o,  2),  (x, 19), (o, 3), (x,  35),
(o,  3), (x, 12), (o, 3),  (x,    13), ], 1, ),  (    v![  (x,  10), (o, 2), (x, 18), (o, 3), (x, 37), (o, 3), (x, 11), (o, 2), (x, 14), ], 1, ),  (                v![  (x,  11), (o, 2), (x, 17),  (o,
2), (x, 39), (o, 3), (x,  10),      (o, 2),  (x,      14),  ],  1, ), ( v![ (x, 11), (o, 2), (x, 16), (o, 3), (x, 40), (o, 2), (x, 10), (o, 2),  (x,              14),  ], 1, ), ( v![ (x, 11), (o,  3),
(x, u), (o, 2), (x, 41), (o, 3),    (x, 8),  (o,      3),  (x, 14), ], 1, ), ( v![ (x, 12), (o, 2), (x, 14), (o, 2), (x, 43), (o, 2), (x, 8),  (o,                2),  (x,  u), ], 1, ), ( v![ (x,  12),
(o,  2),  (x,  13), (o, 3),  (x,      43),   (o,      3),  (x,  7), (o, 2), (x, u), ], 1, ), ( v![ (x, 12), (o, 2), (x, 13), (o, 2), (x, 45),  (o,              2),  (x, 6), (o, 3), (x, u), ], 1, ),  (
v![ (x, 12), (o, 3), (x, 11),  (o,      3),  (x,      45), (o, 2), (x, 6), (o, 2), (x, 16), ], 1, ), ( v![ (x, 13), (o, 2), (x, 11), (o, 2), (x,              46),  (o, 2), (x, 5), (o, 3), (x, 16),  ],
1,  ),  (  v![ (x, 13), (o, 2),  (x,    11), (o,      2),  (x,  46), (o, 3), (x, 4), (o, 2), (x, 17), ], 1, ), ( v![ (x, 13), (o, 3), (x,  9),                (o,  3), (x, 46), (o, 3), (x, 4), (o,  2),
(x, 17), ], 1, ), ( v![ (x, 14), (o,                  2),  (x,  9), (o, 2), (x, 47), (o, 2), (x, 4), (o, 3), (x, 17), ], 1, ), ( v![ (x,  14),              (o, 3), (x, 8), (o, 2), (x, 47), (o, 2), (x,
4),  (o,  2), (x, 18), ], 1, ), (  v![    (x,  u),    (o,  2), (x, 8), (o, 2), (x, 47), (o, 2), (x, 3), (o, 3), (x, 18), ], 1, ), ( v![  (x,              u),  (o, 3), (x, 6), (o, 3), (x, 47), (o,  2),
(x,  3),  (o, 2), (x, 19), ], 1, ),  (                v![ (x, 16), (o, 2), (x, 6), (o, 3), (x, 46), (o, 2), (x, 3), (o, 3), (x, 19), ], 1,      ), (      v![ (x, 16), (o, 3), (x, 5), (o, 3), (x,  46),
(o,  2), (x, 2), (o, 3), (x, 20), ],  1,      ), (    v![ (x, 17), (o, 3), (x, 4), (o, 3), (x, 45), (o, 2), (x, 3), (o, 2), (x, 21),  ],      1,  ),    ( v![ (x, 18), (o, 2), (x, 4), (o, 3), (x,  44),
(o, 3), (x, 2), (o, 3), (x, 21), ], 1,  ),            ( v![ (x, 18), (o, 3), (x, 3), (o, 3), (x, 44), (o, 2), (x, 2), (o, 3), (x, 22),      ],  1,      ),  (  v![ (x, 19), (o, 2), (x, 4), (o, 2),  (x,
43), (o, 2), (x, 3), (o, 2), (x, 23), ],  1,    ), (      v![  (x,  19), (o, 3), (x, 3), (o, 2), (x, 42), (o, 3), (x, 2), (o, 3),  (x,    23),  ],    1,  ), ( v![ (x, 20), (o, 3), (x, 2), (o, 2),  (x,
41), (o, 3), (x, 3), (o, 2), (x, 24), ],  1,      ), (        v![ (x, 21), (o, 3), (x, 1), (o, 2), (x, 40), (o, 3), (x, 3), (o,  3),                  (x,  24), ], 1, ), ( v![ (x, 22), (o, 2), (x,  2),
(o,  3), (x, 38), (o, 2), (x, 4), (o, 2),  (x,                          25), ], 1, ), ( v![ (x, 22), (o, 3), (x, 2), (o, 4), (x,  35),  (o,  3),    (x, 3), (o, 3), (x, 25), ], 1, ), ( v![ (x, 23), (o,
4),  (x, 1), (o, 8), (x, 31), (o, 1), (x, 4),  (o,                              2),  (x, 26), ], 1, ), ( v![(x, 25), (o, 4), (x, 1), (o,  10),      (x, 31), (o, 3), (x, 26)], 1, ), ( v![ (x, 26),  (o,
6),  (x,  2), (o, 11), (x, 17), (o, 2), (x, 6),  (o,                                      3),  (x,  27),  ], 1, ), (  v![(x,    28), (o, 6),      (x,  5),  (o,  25), (x, 5), (o, 3), (x, 28)], 1, ),  (
v![(x, 31), (o, 6), (x, 7), (o, 19), (x, 6), (o, 2), (x,            29)],   1,                                                  ),       (      v![(x,  t), (o, 7), (x, u), (o, 6), (x, 7), (o, 3),  (x,
29)],  1,  ), (v![(x, 36), (o, 7), (x, 24), (o, 3), (x,  30)],            1),    (v![(x,                                      39), (o, 7),    (x,  20),  (o, 3), (x, 31)], 1), (v![(x, 42), (o, 7),  (x,
16),  (o, 3), (x, 32)], 1), (v![(x, 45), (o, 10), (x, 8), (o,  4),              (x, t)], 1), (v![(x, 48),  (o,            17), (x, 35)],      1), (v![(x, 53), (o, 10), (x, 37)], 1), (v![(x, 100)], 5),
]; let mut _m = vec![]; for (row, repeat) in woxjro { for _ in 0..repeat              {  for  (b,  len)  in  &row  { if *b {  p!("{}",      "\u{20}".repeat(*len  * 2)); } else { (_m, v) = a(v, *len  *
2); let s = p(&_m, len * 2); p!( "{}", if s.len() == 0 {  "\u{20}".repeat(*len              * 2) } else { s } ); } } pln!(""); } } }      fn a(v: Vec<&str>, lmt: usize) -> (Vec<&str>, Vec<&str>) { let
mut now = 0; let mut r = vec![]; let mut idx = 0; let mut l0 = false; for (i, &e) in              v.iter().enumerate() { if lmt  <      now { break; } if lmt < now + e.len() + if i == 0 { 0 } else { 1
}  {  if r.len() <= 1 { l0 = true; } break; } r.push(e); now += e.len() + if i == 0 { 0  }                    else { 1 };  idx        = i; } if l0 { (vec![], v) } else if v.len() == 0 { (r, v) }  else
{  (r,  v[(idx  + 1)..].to_vec()) } } fn p(v: &Vec<&str>, lmt: usize) -> String { let mut res  =                                  "".to_string();  if  v.len()  > 0 { let sum: usize =  v.iter().map(|e|
e.len()).sum(); let n = (lmt - sum) % v.len(); for (i, e) in v.iter().enumerate() { if i == v.len() - 1  {                    res = format!( "{}{}{}", res, "\u{20}".repeat(((lmt - sum) / v.len()) + if
i  <  n  {  1  }  else  {  0  }),  e  );  }  else  {  res  =  format!(  "{}{}{}", res, e, "\u{20}".repeat(((lmt - sum) / v.len()) + if i < n { 1 } else { 0 }) ); } } } let _ = "© 2022 woxjro"; res  }
